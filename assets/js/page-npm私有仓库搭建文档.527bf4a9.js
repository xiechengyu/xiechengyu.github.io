(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{523:function(e,t,n){"use strict";n.r(t);var a=n(1),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"前言"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[e._v("#")]),e._v(" 前言")]),e._v(" "),n("p",[e._v("我们平时使用npm publish进行发布时，上传的仓库默认地址是npm，通过Verdaccio工具在本地新建一个仓库地址，再把本地的默认上传仓库地址切换到本地仓库地址即可。当npm install时没有找到本地的仓库，则Verdaccio默认配置中会从npm中央仓库下载。")]),e._v(" "),n("h1",{attrs:{id:"环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#环境"}},[e._v("#")]),e._v(" 环境")]),e._v(" "),n("ul",[n("li",[n("p",[e._v("node")])]),e._v(" "),n("li",[n("p",[e._v("verdaccio")])]),e._v(" "),n("li",[n("p",[e._v("nrm（快速切换仓库源）")])]),e._v(" "),n("li",[n("p",[e._v("pm2（守护进程）")])])]),e._v(" "),n("h1",{attrs:{id:"在linux环境中搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在linux环境中搭建"}},[e._v("#")]),e._v(" 在linux环境中搭建")]),e._v(" "),n("h2",{attrs:{id:"全局安装verdaccio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局安装verdaccio"}},[e._v("#")]),e._v(" 全局安装verdaccio")]),e._v(" "),n("p",[e._v("npm install --global verdaccio")]),e._v(" "),n("h2",{attrs:{id:"全局安装pm2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局安装pm2"}},[e._v("#")]),e._v(" 全局安装pm2")]),e._v(" "),n("p",[e._v("npm install -g pm2")]),e._v(" "),n("h2",{attrs:{id:"给pm2和verdaccio添加到命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#给pm2和verdaccio添加到命令"}},[e._v("#")]),e._v(" 给pm2和verdaccio添加到命令")]),e._v(" "),n("p",[e._v("ln -s /usr/local/nodejs/bin/verdaccio /usr/local/bin/verdaccio")]),e._v(" "),n("p",[e._v("ln -s /usr/local/nodejs/bin/pm2 /usr/local/bin/pm2")]),e._v(" "),n("h2",{attrs:{id:"创建一个普通用户"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#创建一个普通用户"}},[e._v("#")]),e._v(" 创建一个普通用户")]),e._v(" "),n("p",[e._v("useradd wuhs")]),e._v(" "),n("p",[e._v("mkdir -p verdaccio/npmdata")]),e._v(" "),n("h2",{attrs:{id:"修改配置文件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改配置文件"}},[e._v("#")]),e._v(" 修改配置文件")]),e._v(" "),n("p",[e._v("cp /root/.config/verdaccio/config.yaml /home/wuhs/verdaccio/")]),e._v(" "),n("p",[e._v("cd /home/wuhs/verdaccio/")]),e._v(" "),n("p",[e._v("chown root.root config.yaml")]),e._v(" "),n("p",[e._v("su - wuhs")]),e._v(" "),n("p",[e._v("cd verdaccio/")]),e._v(" "),n("p",[e._v("vim config.yaml")]),e._v(" "),n("p",[e._v("修改为")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('#\n# This is the default configuration file. It allows all users to do anything,\n# please read carefully the documentation and best practices to\n# improve security.\n#\n# Look here for more config file examples:\n# https://github.com/verdaccio/verdaccio/tree/5.x/conf\n#\n# Read about the best practices\n# https://verdaccio.org/docs/best\n\n# path to a directory with all packages\nstorage: ./storage\n# path to a directory with plugins to include\nplugins: ./plugins\n\n# https://verdaccio.org/docs/webui\nweb:\n  title: 玩美npm私库\n  # comment out to disable gravatar support\n  # gravatar: false\n  # by default packages are ordercer ascendant (asc|desc)\n  # sort_packages: asc\n  # convert your UI to the dark side\n  # darkMode: true\n  # html_cache: true\n  # by default all features are displayed\n  # login: true\n  # showInfo: true\n  # showSettings: true\n  # In combination with darkMode you can force specific theme\n  # showThemeSwitch: true\n  # showFooter: true\n  # showSearch: true\n  # showRaw: true\n  # showDownloadTarball: true\n  #  HTML tags injected after manifest <scripts/>\n  # scriptsBodyAfter:\n  #    - \'<script type="text/javascript" src="https://my.company.com/customJS.min.js"><\/script>\'\n  #  HTML tags injected before ends </head>\n  #  metaScripts:\n  #    - \'<script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.slim.min.js"><\/script>\'\n  #    - \'<script type="text/javascript" src="https://browser.sentry-cdn.com/5.15.5/bundle.min.js"><\/script>\'\n  #    - \'<meta name="robots" content="noindex" />\'\n  #  HTML tags injected first child at <body/>\n  #  bodyBefore:\n  #    - \'<div id="myId">html before webpack scripts</div>\'\n  #  Public path for template manifest scripts (only manifest)\n  #  publicPath: http://somedomain.org/\n\n# https://verdaccio.org/docs/configuration#authentication\nauth:\n  htpasswd:\n    file: ./htpasswd\n    # Maximum amount of users allowed to register, defaults to "+inf".\n    # You can set this to -1 to disable registration.\n    # max_users: 1000\n    # Hash algorithm, possible options are: "bcrypt", "md5", "sha1", "crypt".\n    # algorithm: bcrypt # by default is crypt, but is recommended use bcrypt for new installations\n    # Rounds number for "bcrypt", will be ignored for other algorithms.\n    # rounds: 10\n\n# https://verdaccio.org/docs/configuration#uplinks\n# a list of other known repositories we can talk to\nuplinks:\n  npmjs:\n    # url: https://registry.npmjs.org/\n    # 镜像\n    url: https://skimdb.npmjs.com/registry/\n\n# Learn how to protect your packages\n# https://verdaccio.org/docs/protect-your-dependencies/\n# https://verdaccio.org/docs/configuration#packages\npackages:\n  \'@*/*\':\n    # scoped packages\n    access: $all\n    publish: $authenticated\n    unpublish: $authenticated\n    #代理 如果本地仓库没找到会去npmjs中找，npmjs就是uplinks中的变量\n    proxy: npmjs\n\n  \'**\':\n    # allow all users (including non-authenticated users) to read and\n    # publish all packages\n    #\n    # you can specify usernames/groupnames (depending on your auth plugin)\n    # and three keywords: "$all", "$anonymous", "$authenticated"\n    access: $all\n\n    # allow all known users to publish/publish packages\n    # (anyone can register by default, remember?)\n    publish: $authenticated\n    unpublish: $authenticated\n\n    # if package is not available locally, proxy requests to \'npmjs\' registry\n    proxy: npmjs\n\n# To improve your security configuration and  avoid dependency confusion\n# consider removing the proxy property for private packages\n# https://verdaccio.org/docs/best#remove-proxy-to-increase-security-at-private-packages\n\n# https://verdaccio.org/docs/configuration#server\n# You can specify HTTP/1.1 server keep alive timeout in seconds for incoming connections.\n# A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.\n# WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enough.\nserver:\n  keepAliveTimeout: 60\n  # Allow `req.ip` to resolve properly when Verdaccio is behind a proxy or load-balancer\n  # See: https://expressjs.com/en/guide/behind-proxies.html\n  # trustProxy: \'127.0.0.1\'\n\n# https://verdaccio.org/docs/configuration#offline-publish\n# publish:\n#   allow_offline: false\n\n# https://verdaccio.org/docs/configuration#url-prefix\n# url_prefix: /verdaccio/\n# VERDACCIO_PUBLIC_URL=\'https://somedomain.org\';\n# url_prefix: \'/my_prefix\'\n# // url -> https://somedomain.org/my_prefix/\n# VERDACCIO_PUBLIC_URL=\'https://somedomain.org\';\n# url_prefix: \'/\'\n# // url -> https://somedomain.org/\n# VERDACCIO_PUBLIC_URL=\'https://somedomain.org/first_prefix\';\n# url_prefix: \'/second_prefix\'\n# // url -> https://somedomain.org/second_prefix/\'\n\n# https://verdaccio.org/docs/configuration#security\n# security:\n#   api:\n#     legacy: true\n#     jwt:\n#       sign:\n#         expiresIn: 29d\n#       verify:\n#         someProp: [value]\n#    web:\n#      sign:\n#        expiresIn: 1h # 1 hour by default\n#      verify:\n#         someProp: [value]\n\n# https://verdaccio.org/docs/configuration#user-rate-limit\n# userRateLimit:\n#   windowMs: 50000\n#   max: 1000\n\n# https://verdaccio.org/docs/configuration#max-body-size\n# max_body_size: 10mb\n\n# https://verdaccio.org/docs/configuration#listen-port\n# listen:\n# - localhost:4873            # default value\n# - http://localhost:4873     # same thing\n# - 0.0.0.0:4873              # listen on all addresses (INADDR_ANY)\n# - https://example.org:4873  # if you want to use https\n# - "[::1]:4873"                # ipv6\n# - unix:/tmp/verdaccio.sock    # unix socket\n\n# The HTTPS configuration is useful if you do not consider use a HTTP Proxy\n# https://verdaccio.org/docs/configuration#https\n# https:\n#   key: ./path/verdaccio-key.pem\n#   cert: ./path/verdaccio-cert.pem\n#   ca: ./path/verdaccio-csr.pem\n\n# https://verdaccio.org/docs/configuration#proxy\n# http_proxy: http://something.local/\n# https_proxy: https://something.local/\n\n# https://verdaccio.org/docs/configuration#notifications\n# notify:\n#   method: POST\n#   headers: [{ "Content-Type": "application/json" }]\n#   endpoint: https://usagge.hipchat.com/v2/room/3729485/notification?auth_token=mySecretToken\n#   content: \'{"color":"green","message":"New package published: * '+e._s(e.name)+'*","notify":true,"message_format":"text"}\'\n\nmiddlewares:\n  audit:\n    enabled: true\n\n# 监听本地所有ip，配置了后可以通过公网访问\nlisten: 0.0.0.0:10241\n\n# https://verdaccio.org/docs/logger\n# log settings\nlogs: { type: stdout, format: pretty, level: http }\n#experiments:\n#  # support for npm token command\n#  token: false\n#  # disable writing body size to logs, read more on ticket 1912\n#  bytesin_off: false\n#  # enable tarball URL redirect for hosting tarball with a different server, the tarball_url_redirect can be a template string\n#  tarball_url_redirect: \'https://mycdn.com/verdaccio/${packageName}/${filename}\'\n#  # the tarball_url_redirect can be a function, takes packageName and filename and returns the url, when working with a js configuration file\n#  tarball_url_redirect(packageName, filename) {\n#    const signedUrl = // generate a signed url\n#    return signedUrl;\n#  }\n\n# translate your registry, api i18n not available yet\n# i18n:\n# list of the available translations https://github.com/verdaccio/verdaccio/blob/master/packages/plugins/ui-theme/src/i18n/ABOUT_TRANSLATIONS.md\n#   web: en-US\n')])])]),n("h2",{attrs:{id:"使用pm2启动verdaccio"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用pm2启动verdaccio"}},[e._v("#")]),e._v(" 使用pm2启动verdaccio")]),e._v(" "),n("p",[e._v("pm2 start verdaccio")]),e._v(" "),n("h2",{attrs:{id:"设置开机自启动"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置开机自启动"}},[e._v("#")]),e._v(" 设置开机自启动")]),e._v(" "),n("p",[e._v("1、执行pm2 save 保存已启动项目")]),e._v(" "),n("p",[e._v("2、执行pm2 startup以后会得到以下提示 设置环境变量")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v("1 [PM2] Init System found: upstart\n2 [PM2] To setup the Startup Script, copy/paste the following command:\n3 sudo env PATH=$PATH:/opt/bitnami/nodejs/bin /opt/bitnami/nodejs/lib/node_modules/pm2/bin/pm2 startup upstart -u bitnami --hp /home/bitnami\n")])])]),n("p",[e._v("3、粘贴复制 sudo env….这一部分的命令 执行命令 完成。")]),e._v(" "),n("p",[e._v("4、设置完成，sudo reboot 手动重启服务器pm2 list 查看验证")]),e._v(" "),n("h1",{attrs:{id:"在windows环境中搭建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在windows环境中搭建"}},[e._v("#")]),e._v(" 在windows环境中搭建")]),e._v(" "),n("h2",{attrs:{id:"全局安装verdaccio-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局安装verdaccio-2"}},[e._v("#")]),e._v(" 全局安装verdaccio")]),e._v(" "),n("p",[e._v("npm install --global verdaccio")]),e._v(" "),n("h2",{attrs:{id:"全局安装pm2-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#全局安装pm2-2"}},[e._v("#")]),e._v(" 全局安装pm2")]),e._v(" "),n("p",[e._v("npm install -g pm2")]),e._v(" "),n("h2",{attrs:{id:"修改配置文件-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#修改配置文件-2"}},[e._v("#")]),e._v(" 修改配置文件")]),e._v(" "),n("p",[e._v("将 C:\\Users\\谢成昱.config\\verdaccio\\config.yaml 文件更改内容为")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[e._v('#\n# This is the default configuration file. It allows all users to do anything,\n# please read carefully the documentation and best practices to\n# improve security.\n#\n# Look here for more config file examples:\n# https://github.com/verdaccio/verdaccio/tree/5.x/conf\n#\n# Read about the best practices\n# https://verdaccio.org/docs/best\n\n# path to a directory with all packages\nstorage: ./storage\n# path to a directory with plugins to include\nplugins: ./plugins\n\n# https://verdaccio.org/docs/webui\nweb:\n  title: 玩美npm私库\n  # comment out to disable gravatar support\n  # gravatar: false\n  # by default packages are ordercer ascendant (asc|desc)\n  # sort_packages: asc\n  # convert your UI to the dark side\n  # darkMode: true\n  # html_cache: true\n  # by default all features are displayed\n  # login: true\n  # showInfo: true\n  # showSettings: true\n  # In combination with darkMode you can force specific theme\n  # showThemeSwitch: true\n  # showFooter: true\n  # showSearch: true\n  # showRaw: true\n  # showDownloadTarball: true\n  #  HTML tags injected after manifest <scripts/>\n  # scriptsBodyAfter:\n  #    - \'<script type="text/javascript" src="https://my.company.com/customJS.min.js"><\/script>\'\n  #  HTML tags injected before ends </head>\n  #  metaScripts:\n  #    - \'<script type="text/javascript" src="https://code.jquery.com/jquery-3.5.1.slim.min.js"><\/script>\'\n  #    - \'<script type="text/javascript" src="https://browser.sentry-cdn.com/5.15.5/bundle.min.js"><\/script>\'\n  #    - \'<meta name="robots" content="noindex" />\'\n  #  HTML tags injected first child at <body/>\n  #  bodyBefore:\n  #    - \'<div id="myId">html before webpack scripts</div>\'\n  #  Public path for template manifest scripts (only manifest)\n  #  publicPath: http://somedomain.org/\n\n# https://verdaccio.org/docs/configuration#authentication\nauth:\n  htpasswd:\n    file: ./htpasswd\n    # Maximum amount of users allowed to register, defaults to "+inf".\n    # You can set this to -1 to disable registration.\n    # max_users: 1000\n    # Hash algorithm, possible options are: "bcrypt", "md5", "sha1", "crypt".\n    # algorithm: bcrypt # by default is crypt, but is recommended use bcrypt for new installations\n    # Rounds number for "bcrypt", will be ignored for other algorithms.\n    # rounds: 10\n\n# https://verdaccio.org/docs/configuration#uplinks\n# a list of other known repositories we can talk to\nuplinks:\n  npmjs:\n    # url: https://registry.npmjs.org/\n    # 镜像\n    url: https://skimdb.npmjs.com/registry/\n\n# Learn how to protect your packages\n# https://verdaccio.org/docs/protect-your-dependencies/\n# https://verdaccio.org/docs/configuration#packages\npackages:\n  \'@*/*\':\n    # scoped packages\n    access: $all\n    publish: $authenticated\n    unpublish: $authenticated\n    #代理 如果本地仓库没找到会去npmjs中找，npmjs就是uplinks中的变量\n    proxy: npmjs\n\n  \'**\':\n    # allow all users (including non-authenticated users) to read and\n    # publish all packages\n    #\n    # you can specify usernames/groupnames (depending on your auth plugin)\n    # and three keywords: "$all", "$anonymous", "$authenticated"\n    access: $all\n\n    # allow all known users to publish/publish packages\n    # (anyone can register by default, remember?)\n    publish: $authenticated\n    unpublish: $authenticated\n\n    # if package is not available locally, proxy requests to \'npmjs\' registry\n    proxy: npmjs\n\n# To improve your security configuration and  avoid dependency confusion\n# consider removing the proxy property for private packages\n# https://verdaccio.org/docs/best#remove-proxy-to-increase-security-at-private-packages\n\n# https://verdaccio.org/docs/configuration#server\n# You can specify HTTP/1.1 server keep alive timeout in seconds for incoming connections.\n# A value of 0 makes the http server behave similarly to Node.js versions prior to 8.0.0, which did not have a keep-alive timeout.\n# WORKAROUND: Through given configuration you can workaround following issue https://github.com/verdaccio/verdaccio/issues/301. Set to 0 in case 60 is not enough.\nserver:\n  keepAliveTimeout: 60\n  # Allow `req.ip` to resolve properly when Verdaccio is behind a proxy or load-balancer\n  # See: https://expressjs.com/en/guide/behind-proxies.html\n  # trustProxy: \'127.0.0.1\'\n\n# https://verdaccio.org/docs/configuration#offline-publish\n# publish:\n#   allow_offline: false\n\n# https://verdaccio.org/docs/configuration#url-prefix\n# url_prefix: /verdaccio/\n# VERDACCIO_PUBLIC_URL=\'https://somedomain.org\';\n# url_prefix: \'/my_prefix\'\n# // url -> https://somedomain.org/my_prefix/\n# VERDACCIO_PUBLIC_URL=\'https://somedomain.org\';\n# url_prefix: \'/\'\n# // url -> https://somedomain.org/\n# VERDACCIO_PUBLIC_URL=\'https://somedomain.org/first_prefix\';\n# url_prefix: \'/second_prefix\'\n# // url -> https://somedomain.org/second_prefix/\'\n\n# https://verdaccio.org/docs/configuration#security\n# security:\n#   api:\n#     legacy: true\n#     jwt:\n#       sign:\n#         expiresIn: 29d\n#       verify:\n#         someProp: [value]\n#    web:\n#      sign:\n#        expiresIn: 1h # 1 hour by default\n#      verify:\n#         someProp: [value]\n\n# https://verdaccio.org/docs/configuration#user-rate-limit\n# userRateLimit:\n#   windowMs: 50000\n#   max: 1000\n\n# https://verdaccio.org/docs/configuration#max-body-size\n# max_body_size: 10mb\n\n# https://verdaccio.org/docs/configuration#listen-port\n# listen:\n# - localhost:4873            # default value\n# - http://localhost:4873     # same thing\n# - 0.0.0.0:4873              # listen on all addresses (INADDR_ANY)\n# - https://example.org:4873  # if you want to use https\n# - "[::1]:4873"                # ipv6\n# - unix:/tmp/verdaccio.sock    # unix socket\n\n# The HTTPS configuration is useful if you do not consider use a HTTP Proxy\n# https://verdaccio.org/docs/configuration#https\n# https:\n#   key: ./path/verdaccio-key.pem\n#   cert: ./path/verdaccio-cert.pem\n#   ca: ./path/verdaccio-csr.pem\n\n# https://verdaccio.org/docs/configuration#proxy\n# http_proxy: http://something.local/\n# https_proxy: https://something.local/\n\n# https://verdaccio.org/docs/configuration#notifications\n# notify:\n#   method: POST\n#   headers: [{ "Content-Type": "application/json" }]\n#   endpoint: https://usagge.hipchat.com/v2/room/3729485/notification?auth_token=mySecretToken\n#   content: \'{"color":"green","message":"New package published: * '+e._s(e.name)+'*","notify":true,"message_format":"text"}\'\n\nmiddlewares:\n  audit:\n    enabled: true\n\n# 监听本地所有ip，配置了后可以通过公网访问\nlisten: 0.0.0.0:10241\n\n# https://verdaccio.org/docs/logger\n# log settings\nlogs: { type: stdout, format: pretty, level: http }\n#experiments:\n#  # support for npm token command\n#  token: false\n#  # disable writing body size to logs, read more on ticket 1912\n#  bytesin_off: false\n#  # enable tarball URL redirect for hosting tarball with a different server, the tarball_url_redirect can be a template string\n#  tarball_url_redirect: \'https://mycdn.com/verdaccio/${packageName}/${filename}\'\n#  # the tarball_url_redirect can be a function, takes packageName and filename and returns the url, when working with a js configuration file\n#  tarball_url_redirect(packageName, filename) {\n#    const signedUrl = // generate a signed url\n#    return signedUrl;\n#  }\n\n# translate your registry, api i18n not available yet\n# i18n:\n# list of the available translations https://github.com/verdaccio/verdaccio/blob/master/packages/plugins/ui-theme/src/i18n/ABOUT_TRANSLATIONS.md\n#   web: en-US\n')])])]),n("h2",{attrs:{id:"下载、安装windows自启动包"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下载、安装windows自启动包"}},[e._v("#")]),e._v(" 下载、安装windows自启动包")]),e._v(" "),n("p",[e._v("1、npm install pm2-windows-startup -g")]),e._v(" "),n("p",[e._v("2、pm2-startup install")]),e._v(" "),n("h2",{attrs:{id:"使用pm2启动verdaccio-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用pm2启动verdaccio-2"}},[e._v("#")]),e._v(" 使用pm2启动verdaccio")]),e._v(" "),n("p",[e._v("pm2 start D:\\nvm\\v18.13.0\\node_modules\\verdaccio\\bin\\verdaccio")]),e._v(" "),n("h2",{attrs:{id:"设置开机自启动-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置开机自启动-2"}},[e._v("#")]),e._v(" 设置开机自启动")]),e._v(" "),n("p",[e._v("1、执行pm2 save 保存已启动项目")]),e._v(" "),n("p",[e._v("2、重启后通过 pm2 list查看")])])}),[],!1,null,null,null);t.default=o.exports}}]);